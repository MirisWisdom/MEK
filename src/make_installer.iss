; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "MEK Essentials"
#define MyAppVersion "1.0.4.0"
#define MyAppPublisher "Moses of Egypt"
#define MyAppURL "https://bitbucket.org/Moses_of_Egypt/"
#define MekeDir "F:\My Files\Applications\My Repos\meke\"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{145BFD54-DAD9-45EC-9193-466BFA3A6038}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
VersionInfoVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
SetupIconFile="{#MekeDir}src\rsrc\icons\meke.ico"
LicenseFile="{#MekeDir}src\rsrc\LICENSE.TXT"
InfoBeforeFile="{#MekeDir}src\rsrc\readme.txt"
OutputDir={#MekeDir}
OutputBaseFilename=MEK Essentials Setup
Compression=lzma2/ultra
SolidCompression=yes   
ArchitecturesAllowed=x64
ArchitecturesInstallIn64BitMode=x64

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]   
Source: "{#MekeDir}exe.win-amd64-3.5\cmd_lists\*"; DestDir: "{app}\cmd_lists"; Flags: uninsneveruninstall 
Source: "{#MekeDir}exe.win-amd64-3.5\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs 

[Icons]
Name: "{group}\Mozzarilla"; Filename: "{app}\Mozzarilla.exe"; \
    AfterInstall: SetElevationBit('{group}\Mozzarilla.lnk')
Name: "{group}\Refinery"; Filename: "{app}\Refinery.exe"; \
    AfterInstall: SetElevationBit('{group}\Refinery.lnk')
Name: "{group}\Pool"; Filename: "{app}\Pool.exe"; \
    AfterInstall: SetElevationBit('{group}\Pool.lnk')      
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{group}\Readmes\mozzarilla_readme"; Filename: "{app}\readmes\mozzarilla_readme.txt"
Name: "{group}\Readmes\refinery_readme"; Filename: "{app}\readmes\refinery_readme.txt"       
Name: "{group}\Readmes\pool_readme"; Filename: "{app}\readmes\pool_readme.txt"  

Name: "{userdesktop}\Mozzarilla"; Filename: "{app}\Mozzarilla.exe";
Name: "{userdesktop}\Refinery"; Filename: "{app}\Refinery.exe";
Name: "{userdesktop}\Pool"; Filename: "{app}\Pool.exe";
Name: "{userdesktop}\Mozzarilla (Run as Admin)"; Filename: "{app}\Mozzarilla.exe"; \
    AfterInstall: SetElevationBit('{userdesktop}\Mozzarilla (Run as Admin).lnk')
Name: "{userdesktop}\Refinery (Run as Admin)"; Filename: "{app}\Refinery.exe"; \
    AfterInstall: SetElevationBit('{userdesktop}\Refinery (Run as Admin).lnk')
Name: "{userdesktop}\Pool (Run as Admin)"; Filename: "{app}\Pool.exe"; \
    AfterInstall: SetElevationBit('{userdesktop}\Pool (Run as Admin).lnk')

[Code]

procedure SetElevationBit(Filename: string);
var
  Buffer: string;
  Stream: TStream;
begin
  Filename := ExpandConstant(Filename);
  Log('Setting elevation bit for ' + Filename);
        
  try
    Stream := TFileStream.Create(FileName, fmOpenReadWrite);
    Stream.Seek(21, soFromBeginning);
    SetLength(Buffer, 1);
    Stream.ReadBuffer(Buffer, 1);
    Buffer[1] := Chr(Ord(Buffer[1]) or $20);
    Stream.Seek(-1, soFromCurrent);
    Stream.WriteBuffer(Buffer, 1);
  finally
    Stream.Free;
  end;
end;